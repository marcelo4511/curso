version: "3.7"

services:
    # image project
    curso_do:
        build:
            context: . # Diretório atual, onde o Dockerfile está localizado
            dockerfile: Dockerfile # Certifique-se de que o nome do Dockerfile está correto
        image: laravel-app # Nome da imagem que será criada
        restart: unless-stopped # Reiniciar se o contêiner parar
        working_dir: /var/www/ # Definindo o diretório de trabalho
        volumes:
            - ./:/var/www # Mapeando a pasta local para o diretório no contêiner
        depends_on:
            - redis # Dependência do Redis
        networks:
            - projectx # Rede Docker personalizada

    # nginx
    nginx:
        image: nginx:alpine
        restart: unless-stopped
        ports:
            - 80:80
        volumes:
            - ./:/var/www
            - ./docker/nginx/:/etc/nginx/conf.d/
        networks:
            - projectx

    # db mysql
    mysql:
        image: mysql:5.7.22
        restart: unless-stopped
        environment:
            MYSQL_DATABASE: ${DB_DATABASE} # Certifique-se de que as variáveis estejam no arquivo .env
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
            MYSQL_PASSWORD: ${DB_PASSWORD}
            MYSQL_USER: ${DB_USERNAME}
        volumes:
            - ./.docker/mysql/dbdata:/var/lib/mysql
        networks:
            - projectx

    node:
        image: node:16-alpine
        container_name: vue-app
        working_dir: /var/www
        volumes:
            - ./:/var/www
        command: "npm run dev"
        networks:
            - projectx
        user: "0:0" # Execução como root (0:0)

    # queue
    queue:
        image: laravel-app
        restart: unless-stopped
        working_dir: /var/www/
        volumes:
            - ./:/var/www
        depends_on:
            - redis
        networks:
            - projectx

    # redis
    redis:
        image: redis:latest
        networks:
            - projectx

networks:
    projectx:
        driver: bridge
